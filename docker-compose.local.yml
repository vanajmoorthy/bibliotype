services:
    db:
        image: postgres:15
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - "5432:5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
            interval: 5s
            timeout: 5s
            retries: 5

    web:
        build: .
        command: sh -c "./wait-for-postgres.sh db poetry run python manage.py runserver 0.0.0.0:8000"
        volumes:
            - .:/app
            - /app/.venv
        ports:
            - "8000:8000"
        environment:
            # This constructs the DATABASE_URL from the other variables
            - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
            # These are passed through from your shell's environment (which docker-compose loads from .env)
            - SECRET_KEY=${SECRET_KEY}
            - GEMINI_API_KEY=${GEMINI_API_KEY}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        depends_on:
            db:
                condition: service_healthy
volumes:
    postgres_data:
