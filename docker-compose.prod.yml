services:
    db:
        image: postgres:15
        volumes:
            # This will store the database data on your VPS's filesystem
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        # We don't need to expose the port to the outside world,
        # as the web service will connect to it internally via Docker's network.
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
        interval: 5s
        timeout: 5s
        retries: 5

    web:
        build: .
        image: vanajmoorthy/bibliotype
        volumes:
            - static_volume:/app/staticfiles
        expose:
            - 8000
        environment:
            # These are all read from the .env file on your server
            - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
            - SECRET_KEY=${SECRET_KEY}
            - GEMINI_API_KEY=${GEMINI_API_KEY}
            - DEBUG=${DEBUG}
            - ALLOWED_HOSTS=${ALLOWED_HOSTS}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        depends_on:
            db:
                condition: service_healthy
volumes:
    postgres_data:
    static_volume:
