# Generated by Django 5.2.5 on 2025-10-26 20:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0019_alter_book_unique_together'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='userprofile',
            name='visible_in_recommendations',
            field=models.BooleanField(default=True, help_text='Allow other users to see you as a recommendation source'),
        ),
        migrations.CreateModel(
            name='AnonymizedReadingProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_books_read', models.PositiveIntegerField()),
                ('reader_type', models.CharField(db_index=True, max_length=100)),
                ('genre_distribution', models.JSONField(default=dict)),
                ('author_distribution', models.JSONField(default=dict)),
                ('average_rating', models.FloatField(blank=True, null=True)),
                ('avg_book_length', models.IntegerField(blank=True, null=True)),
                ('avg_publish_year', models.IntegerField(blank=True, null=True)),
                ('mainstream_score', models.IntegerField(blank=True, null=True)),
                ('genre_diversity_count', models.PositiveIntegerField(default=0)),
                ('top_book_ids', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('source', models.CharField(default='anonymous', max_length=20)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['reader_type', 'created_at'], name='core_anonym_reader__a99942_idx'), models.Index(fields=['total_books_read'], name='core_anonym_total_b_d11baf_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnonymousUserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(db_index=True, max_length=40, unique=True)),
                ('dna_data', models.JSONField()),
                ('books_data', models.JSONField(default=list)),
                ('top_books_data', models.JSONField(default=list)),
                ('genre_distribution', models.JSONField(default=dict)),
                ('author_distribution', models.JSONField(default=dict)),
                ('anonymized', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(db_index=True)),
            ],
            options={
                'indexes': [models.Index(fields=['session_key', 'expires_at'], name='core_anonym_session_b6e673_idx'), models.Index(fields=['expires_at', 'anonymized'], name='core_anonym_expires_0b0804_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_rating', models.IntegerField(blank=True, null=True)),
                ('user_review', models.TextField(blank=True, null=True)),
                ('date_read', models.DateTimeField(blank=True, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('is_top_book', models.BooleanField(db_index=True, default=False)),
                ('top_book_position', models.IntegerField(blank=True, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readers', to='core.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_books', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'is_top_book'], name='core_userbo_user_id_0337ca_idx'), models.Index(fields=['book', 'is_top_book'], name='core_userbo_book_id_813e1b_idx')],
                'unique_together': {('user', 'book')},
            },
        ),
    ]
